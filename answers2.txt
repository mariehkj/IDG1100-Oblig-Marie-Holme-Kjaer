6. What is the octal representation of a file that can be read and written only by its owner?
600

7. In UNIX systems, what is the common name of the special user that can access and modify every file?
In Linux and Unix-like systems, the superuser account is called ‘root’.

8. Which file permission classes are available in UNIX systems?
User, group, and others.

9. As of 2020, which percentage of servers have UNIX-like OS?
 About 71.8% of serves have UNIX-like OS.

10. The command ssh will:
Log you into a remote machine, transfer files between the two machines, and for executing commands on the remote machine.

11. UNIX Command: access your current working directory
The “pwd” command

12. UNIX Command: rename files (give an example)
You have to use the “mv” (move) command to rename files. Example, if we are in the same directory:
    mv example1.txt example2.txt

13. UNIX Command: schedule the execution of programs in the future
The ‘at’ command is used to schedule programs to be executed at a particular time.

14. UNIX Command: Forcefully shutdown the command with process ID 123
To forcefully shutdown the command with process ID 123, you use “kill 123”.

15. UNIX Command:access your root user
The ‘sudo’ (Super User DO) command grants users the special rights to execute commands at the system root level.

16. Crontab scheduled: At minute 30 on Sunday.
30 * * * 0 (could also use ‘SUN’ instead of ‘0’) (on some systems Sunday is 7)

17. Crontab scheduled: At minute 30 on day-of-month 15.
30 * 15 * *

18. Crontab scheduled: At 05:30 on every day-of-week from Sunday through Monday in June.
30 5 * 6 0-1

19. Script:print your name and date
read -p “Enter your name: ” name
date=$(date +%F)
echo “Hello human, your name is $name and the date is $date”

20. Script:add two numeric values, print the result
read -p “Enter first number: “ num1
read -p “Enter second number: “ num2
sum=$( ( $num1 + $num2) )
echo ”Sum is: $sum”

21. Script:inputs username, prints “USERNAMEstored”
read -p “Enter your username” username
echo “${username}stored”

22. Script:Store the output of the command “hostname” in a variable. Display “This script is running on _.” where “_” is the output of the “hostname” command.
echo “The script is running on $HOSTNAME.”

23. Script:Store the output of the workingdirectory (from where the script is run) in a variable then print the variable.
wd=$PWD
echo “Current working directory: $wd”

24. Create a step by step tutorial on how to create a cronjob that prints “Task scheduled at”+ DATE. Cronjob is scheduled every 30 minutes on today’s date(only today).
*/30 * 20 11 * /root/script.sh

script.sh:
date=$(date)
echo “Task scheduled at $date”


First I created the script. I started by declaring the variable ‘date’ with the value $(date). The date command generates the current date. Then I used the echo command to print the string “Task scheduled at $date”.
After that I found the crontab for every 30 minutes on today’s date, which is: */30 * 20 11 *. The /30 makes the cronjob execute every 30 minutes.
Lastly I declared the location of the script.

25. Create a script that takes an input (letter or number) that will display the answer of a question. The script should when started list a menu for the user with the different questions that can be chosen and which corresponding letter the user will have to give as input to display the answer of the desired question. One of the possible inputs the user should be able to make is "q" for quitting the script. The menu should also have a defaultcase where all the items is displayed again,or no changes is made if the user gives an invalid input.
askQuestion() {

echo “a. What does ‘HTML’ stand for?”
echo “b. What is often seen as the smallest unit of memory?”
echo “c. What was Twitter’s original name?”
echo “d. How many bits in a byte?”
echo “e. As of 2020, which percentage of servers have UNIX-like OS?”
read -p “Enter the letter of the question you would like to ask:” question

if  [ “$question” == “q” ]
then
    exit

elif  [ “$question” == “a” ]
then
    echo  “What does ‘HTML’ stand for?”
    echo  “Hyper Text Markup Language”

elif  [ “$question” == “b” ]
then
    echo “What is often seen as the smallest unit of memory?”
    echo “Kilobyte”

elif  [ “$question” == “c” ]
then
    echo “What was Twitter’s original name?”
    echo “twitter”

elif  [ “$question” == “d” ]
then
    echo “How many bits in a byte?”
    echo “8”

elif  [ “$question” == “e” ]
then
    echo “As of 2020, which percentage of servers have UNIX-like OS?”
    echo “About 71.8% of serves have UNIX-like OS”

else
    askQuestion
fi
}

askQuestion
